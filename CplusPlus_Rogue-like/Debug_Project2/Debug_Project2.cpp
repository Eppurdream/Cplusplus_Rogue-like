#include <iostream>
#include <Windows.h>
#include <conio.h>
#include <vector>
#include <string>
using namespace std;

#define X 141
#define Y 30

  //"#########-#########-#########-#########-#########-#########-#########-#########-#########-#########-#########-#########-#########-#########-",
char map[Y][X] = {
	"############################################################################################################################################",
	"#                                                                                                                                          #",
	"#                                                                                                                                          #",
	"#                                                                                                                                          #",
	"#                        Collection                              Game Start                              Making....                        #",
	"#                                                                                                                                          #",
	"#                   ####################                    ####################                    ####################                   #",
	"#                   #                  #                    #                  #                    #                  #                   #",
	"#                   #        @@        #                    #        @@        #                    #        @@        #                   #",
	"#                   #        @@        #                    #        @@        #                    ####################                   #",
	"#                                                                                                                                          #",
	"#                                                                                                                                          #",
	"#                                                                                                                                          #",
	"#                                                                                                                                          #",
	"#                                                                                                                                          #",
	"#                                                                                                                                          #",
	"#                                                                                                                                          #",
	"#                                                                                                                                          #",
	"#                                                                                                                                          #",
	"#                                                                                                                                          #",
	"#                                                                                                                                          #",
	"#                                                                                                                                          #",
	"#                                                                                                                                          #",
	"#                                                                                                                                          #",
	"#                                                                                                                                          #",
	"#                                                                                                                                          #",
	"#                                                                                                                                          #",
	"#                                                                                                                                          #",
	"#                                                                                                                                          #",
	"############################################################################################################################################"
};


//################################################################################
//################################################################################
//################################################################################
//################################################################################
//################################################################################
//################################################################################
//################################################################################
//################################################################################
//################################################################################
//################################################################################
//################################################################################
//################################################################################
//################################################################################
//################################################################################
//################################################################################
//################################################################################
//################################################################################
//################################################################################
//################################################################################
//################################################################################

void prnMap(char arr[][X], int x, int y)
{
	system("cls");
	for (int i = y; i < y + 20; i++)
	{
		for (int n = x; n < x + 80; n++)
		{
			cout << arr[i][n];
		}
		if (i + 1 == y + 20)
			return;
		cout << endl;
	}
}

int main()
{
	system("mode con: cols=30 lines=15");
	cout << "GAME START" << endl;
	cout << "PRESS 'S'" << endl;
	_getch();
	system("mode con: cols=80 lines=20");
	
	char key = 0;
	int y = 0;
	int x = 30;

	prnMap(map, x, y);
	
	while (true) // 이정도로 하면 되지 않을까??
	{
		if (_kbhit())
		{
			key = _getch();
			key = tolower(key);
			if (key == 'w') {
				if (y > 0)
				{
					y--;
					prnMap(map, x, y);
				}
			}
			else if (key == 's') {
				if (y < 10)
				{
					y++;
					prnMap(map, x, y);
				}
			}
			else if (key == 'a') {
				if (x >= 0)
				{
					x--;
					prnMap(map, x, y);
				}
			}
			else if (key == 'd') {
				if (x < 60)
				{
					x++;
					prnMap(map, x, y);
				}
			}
		}
	}


	_getch();
	return 0;
}